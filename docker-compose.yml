services:
  backend:
    build:
      context: ./app
      dockerfile: Dockerfile
    volumes:
      - ./app:/var/www/html
    environment:
      - APP_ENV=local
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=saas_db
      - DB_USERNAME=user
      - DB_PASSWORD=pass
    depends_on:
      - db
      - redis
      - rabbitmq

  workers_ia:
    build:
      context: ./workers
      dockerfile: Dockerfile
    volumes:
      - ./workers:/app
    ports:
      - "8001:8000"
    depends_on:
      - rabbitmq
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://nginx:80/api
    depends_on:
      - backend

  db:
    image: postgres:16
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=saas_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  nginx:
    image: nginx:alpine
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend

volumes:
  db_data: